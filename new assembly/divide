.model small
.data
    enter1 db 'Enter the dividend: $'
    enter2 db 'Enter the divisor: $'
    result db 'Quotient: $'
    dividend db ?
    divisor db ?
    quotient db ?
    remainder db ?
.stack
.code
main:
    mov ax, @data
    mov ds, ax

    ; Input dividend
    lea dx, enter1
    mov ah, 09h
    int 21h

    mov ah, 01h
    int 21h

    sub al, 30h  ; convert ASCII to numeric
    mov dividend, al

    ; Input divisor
    lea dx, enter2
    mov ah, 09h
    int 21h

    mov ah, 01h
    int 21h

    sub al, 30h  ; convert ASCII to numeric
    mov divisor, al

    ; Divide numbers
    mov al, dividend
    mov bl, divisor
    xor ah, ah  ; clear ah
    div bl      ; divide al by bl (dividend by divisor)

    mov quotient, al
    mov remainder, ah

    ; Display result (quotient)
    lea dx, result
    mov ah, 09h
    int 21h

    mov dl, quotient
    add dl, 30h  ; convert numeric to ASCII
    mov ah, 02h
    int 21h

    ; Display remainder
    lea dx, result
    mov ah, 09h
    int 21h

    mov dl, remainder
    add dl, 30h  ; convert numeric to ASCII
    mov ah, 02h
    int 21h

    mov ah, 4ch
    int 21h
end main

H4sIAAAAAAAAAGVR25KiMBT8lS1eGUdARJiqqVoFFbTwws2ZWfchhIBBbibBy0z574ssu/uweUt3p0/3yReXYYgKihbuesW9cF97riJlVENmRXvuZc8RUOEoxwUiPcrqCJd77umvJkCE4rKgjfLHnhs9S/ye+/mPnkaYNXTrExOEuqcIoggVsLm+SEKDdAmW6NYgRZ1lDUYZIMwA7CESFU0eDRShPQ2HrhUm4OHcCbo3nY9PEWnApkkBctQOHx9yEH0bh1EjBG0KlAOctRx4cKyM0UnUBt+TB/4My/xPzQoRhtGj4df93kCwqcsIwAWjv4f8B0SAgR4pL7S1Fx+hW7OsTDAEWa8xhYjSknSCPdcad+kto0UlGIpgOEA9WRPVnixpWi+UFKknQA0OYg3F8kBrXUFRlKxdBu02ceeeOIqTArCaoOZLy/4yoMNUCE1ZcJ3algLhAoNpuisNOEpRNPnoC0myfT9ej/wMZ2e9Ks0jyCwDKJP00xtH2TwReEc/rM/K9nAtFxYf20vZ2nnIjtLVwHCX04/psXZ1mc/nNNn6NrI1dDHU6Shjm+OS1/3a8XnTTrdDgY/z3EPi+y0IFSs2hrtbYWIhG29rpFoidc1wEBiiGDuLYOGpjm4Zw1izfLm6YNFNnZHAr44nJQ3LIL2mYVRNxqZ5stVPS3RzthiCsziHB8TL4EONtc9NrL5j/OYG4tWTM1X2sjkvr99IOF/04U6313gT3Fi6SPTZ2PB0XhrFM2M16ZuV4pNZmGabk185AY8VC29CkMhO36n9mSomr6/c/RfGRCy5PQMAAA==
